name: Shin2Chin CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Compile contracts
      run: npm run compile
    
    - name: Run linter
      run: npm run lint
    
    - name: Run tests
      run: npm run test
    
    - name: Run gas reporter
      run: npm run test:gas
      env:
        REPORT_GAS: true
    
    - name: Run coverage
      run: npm run test:coverage
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        fail_ci_if_error: false
  
  security-check:
    runs-on: ubuntu-latest
    needs: build-and-test
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Install Slither
      run: pip3 install slither-analyzer
    
    - name: Run Slither
      run: npm run slither || true
    
    - name: Run contract size check
      run: npx hardhat size-contracts
    
    - name: Check for vulnerabilities
      run: npm audit --audit-level=moderate
  
  deploy-testnet:
    runs-on: ubuntu-latest
    needs: [build-and-test, security-check]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Deploy to testnet
      run: npm run deploy:testnet
      env:
        PRIVATE_KEY: ${{ secrets.DEPLOYER_PRIVATE_KEY }}
        BASE_TESTNET_RPC_URL: ${{ secrets.BASE_TESTNET_RPC_URL }}
    
    - name: Verify contracts
      run: npm run verify
      env:
        ETHERSCAN_API_KEY: ${{ secrets.ETHERSCAN_API_KEY }}